//FOR USER MANAGEMENT
POST /user/create			Data: username=text&password=text&email=text
POST /user/login			Data: username=text&password=text
POST /user/logout

//FOR EVENT MANIPULATION
POST /event 				Data: {event attributes...}
PUT /event 					Data: {event attributes to update..., id: <event id>}
DELETE /event 				Data: {id: <event id>}

//FOR EVENT SHARING MANIPULATION
POST /share 				Data: {event_id: <id>, target_username: <username>}
DELETE /share 				Data: {event_id: <id>, target_username: <username>}

//FOR EVENT LOADING
GET /calendar 				Data: http-data view=all
							Data: http-data view=[day, week, month]&day=day or any day of current week or any day of current month}
							Response: JSON [{id, event attributes, relationship: owned/shared}, {id, event attributes, relationship: owned/shared}, ...]
							
							Event attributes: "name", "start_time", "end_time", "location", "description", "color", "notify"
							Timestamps (start_time/end_time) given by format yyyy-MM-dd HH:mm:ss
						
//FOR FRIEND MANAGEMENT	
GET /friends				Response: JSON {friends: [{username: <username>, status: pending/accepted/declined}]}
POST /friends				Data: JSON {"username": <username>}
							For adding a new friend, status becomes pending
PUT /friends				Data: JSON {"username": <username>, "status": accepted/declined}
							For updating a friendship to accept/decline a friend request
							
//FOR LOADING NOTIFICATIONS
GET /notifications			Response: JSON {notifications: [{user_id: <user_id>, username: <username>, event_id: <event_id>, notification_type: email/online, completed=false/true}], success:true/false}
							Note: immediately clears notifications that are unread

//FOR CLASS ENROLLMENT MANAGEMENT
POST /classes 				Data: {section_id: <id>}
							To enroll in a class
POST /classes 				Data: {section_id: <id>}
							To unenroll from a class